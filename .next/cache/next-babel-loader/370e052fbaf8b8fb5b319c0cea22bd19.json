{"ast":null,"code":"var _jsxFileName = \"/Users/ducbaonguyen/Desktop/bao/pages/post/[postname].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport matter from 'gray-matter';\nimport ReactMarkdown from 'react-markdown';\nimport Layout from '../../components/Layout';\nexport default function BlogPost({\n  siteTitle,\n  frontmatter,\n  markdownBody\n}) {\n  if (!frontmatter) return __jsx(React.Fragment, null);\n  return __jsx(Layout, {\n    pageTitle: `${siteTitle} | ${frontmatter.title}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, \"Back to post list\")), __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, frontmatter.title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, \"By \", frontmatter.author), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, __jsx(ReactMarkdown, {\n    source: markdownBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }))));\n}\nexport async function getStaticProps(_ref) {\n  let ctx = Object.assign({}, _ref);\n  const {\n    postname\n  } = ctx.params;\n  const content = await import(`../../posts/${postname}.md`);\n  const config = await import(`../../siteconfig.json`);\n  const data = matter(content.default);\n  return {\n    props: {\n      siteTitle: config.title,\n      frontmatter: data.data,\n      markdownBody: data.content\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const blogSlugs = (context => {\n    const keys = context.keys();\n    const data = keys.map((key, index) => {\n      let slug = key.replace(/^.*[\\\\\\/]/, '').slice(0, -3);\n      return slug;\n    });\n    return data;\n  })(require.context('../../posts', true, /\\.md$/));\n\n  const paths = blogSlugs.map(slug => `/post/${slug}`);\n  return {\n    paths,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/ducbaonguyen/Desktop/bao/pages/post/[postname].js"],"names":["Link","matter","ReactMarkdown","Layout","BlogPost","siteTitle","frontmatter","markdownBody","title","author","getStaticProps","ctx","postname","params","content","config","data","default","props","getStaticPaths","blogSlugs","context","keys","map","key","index","slug","replace","slice","require","paths","fallback"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,WAAb;AAA0BC,EAAAA;AAA1B,CAAlB,EAA4D;AACzE,MAAI,CAACD,WAAL,EAAkB,OAAO,2BAAP;AAElB,SACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAG,GAAED,SAAU,MAAKC,WAAW,CAACE,KAAM,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,WAAW,CAACE,KAAjB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAOF,WAAW,CAACG,MAAnB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEF,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CAJF,CADJ;AAcD;AAED,OAAO,eAAeG,cAAf,OAA0C;AAAA,MAAPC,GAAO;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAeD,GAAG,CAACE,MAAzB;AAEA,QAAMC,OAAO,GAAG,MAAM,OAAQ,eAAcF,QAAS,KAA/B,CAAtB;AACA,QAAMG,MAAM,GAAG,MAAM,OAAQ,uBAAR,CAArB;AACA,QAAMC,IAAI,GAAGf,MAAM,CAACa,OAAO,CAACG,OAAT,CAAnB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLb,MAAAA,SAAS,EAAEU,MAAM,CAACP,KADb;AAELF,MAAAA,WAAW,EAAEU,IAAI,CAACA,IAFb;AAGLT,MAAAA,YAAY,EAAES,IAAI,CAACF;AAHd;AADF,GAAP;AAOD;AAED,OAAO,eAAeK,cAAf,GAAgC;AACrC,QAAMC,SAAS,GAAG,CAAEC,OAAD,IAAa;AAC9B,UAAMC,IAAI,GAAGD,OAAO,CAACC,IAAR,EAAb;AACA,UAAMN,IAAI,GAAGM,IAAI,CAACC,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACpC,UAAIC,IAAI,GAAGF,GAAG,CAACG,OAAJ,CAAY,WAAZ,EAAyB,EAAzB,EAA6BC,KAA7B,CAAmC,CAAnC,EAAsC,CAAC,CAAvC,CAAX;AAEA,aAAOF,IAAP;AACD,KAJY,CAAb;AAKA,WAAOV,IAAP;AACD,GARiB,EAQfa,OAAO,CAACR,OAAR,CAAgB,aAAhB,EAA+B,IAA/B,EAAqC,OAArC,CARe,CAAlB;;AAUA,QAAMS,KAAK,GAAGV,SAAS,CAACG,GAAV,CAAeG,IAAD,IAAW,SAAQA,IAAK,EAAtC,CAAd;AAEA,SAAO;AACLI,IAAAA,KADK;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID","sourcesContent":["import Link from 'next/link'\nimport matter from 'gray-matter'\nimport ReactMarkdown from 'react-markdown'\n\nimport Layout from '../../components/Layout'\n\nexport default function BlogPost({ siteTitle, frontmatter, markdownBody }) {\n  if (!frontmatter) return <></>\n\n  return (\n      <Layout pageTitle={`${siteTitle} | ${frontmatter.title}`}>\n        <Link href=\"/\">\n          <a>Back to post list</a> \n        </Link>\n        <article>\n          <h1>{frontmatter.title}</h1>\n          <p>By {frontmatter.author}</p>\n          <div>\n            <ReactMarkdown source={markdownBody} />\n          </div>\n        </article>\n      </Layout>\n  )\n}\n\nexport async function getStaticProps({ ...ctx }) {\n  const { postname } = ctx.params\n\n  const content = await import(`../../posts/${postname}.md`)\n  const config = await import(`../../siteconfig.json`)\n  const data = matter(content.default)\n\n  return {\n    props: {\n      siteTitle: config.title,\n      frontmatter: data.data,\n      markdownBody: data.content,\n    },\n  }\n}\n\nexport async function getStaticPaths() {\n  const blogSlugs = ((context) => {\n    const keys = context.keys()\n    const data = keys.map((key, index) => {\n      let slug = key.replace(/^.*[\\\\\\/]/, '').slice(0, -3)\n\n      return slug\n    })\n    return data\n  })(require.context('../../posts', true, /\\.md$/))\n\n  const paths = blogSlugs.map((slug) => `/post/${slug}`)\n\n  return {\n    paths,\n    fallback: false,\n  }\n}"]},"metadata":{},"sourceType":"module"}